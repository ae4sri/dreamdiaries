{"version":3,"sources":["services/users.ts","states/userState.ts","services/login.ts","components/LoginForm.tsx","states/diaryState.ts","components/DiaryTextModal.tsx","services/diaries.ts","components/DiaryList.tsx","components/EditDiaryModal.tsx","components/UserDiaryList.tsx","components/CreateDiaryModal.tsx","components/RegisterForm.tsx","App.tsx","store.ts","index.tsx"],"names":["createUser","newUser","a","axios","post","res","data","userSlice","createAsyncThunk","userObject","thunkAPI","userService","user","Error","createSlice","name","initialState","username","token","reducers","setUser","state","action","console","log","payload","logout","actions","login","credentials","LoginForm","dispatch","useDispatch","handleLogin","event","preventDefault","canBeSubmitted","loginService","password","setUsername","setPassword","alert","useState","length","canSubmit","onSubmit","type","value","onChange","target","disabled","to","diarySlice","title","text","priv","id","date","setDiaries","editDiary","i","createDiary","push","deleteDiary","filter","d","DiaryTextModal","diaryText","useDisclosure","isOpen","onOpen","onClose","onClick","baseUrl","getPublicDiaries","config","headers","Authorization","get","response","diary","setToken","newToken","getUsersDiaries","changeDiaryPrivacy","newPrivacySetting","editObject","put","delete","DiaryList","useEffect","diaryService","initialDiaries","fetch","diaries","useSelector","Object","values","map","substring","color","EditDiaryModal","diaryId","diaryPriv","setText","toString","privacy","setPrivacy","handleEdit","editedDiary","placeholder","colorScheme","mr","UserDiaryList","usersDiaries","handleDelete","e","CreateDiaryModal","setTitle","handleCreate","newDiary","RegisterForm","handleRegister","confirmPassword","setConfirmPassword","paddingTop","Nav","spacing","as","Link","App","className","path","store","configureStore","reducer","diaryReducer","userReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75a21dbf.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/users'\r\n\r\nconst createUser = async (newUser: { username: string, password: string}) => {\r\n    const res = await axios.post(baseUrl, newUser)\r\n    return res.data\r\n  }\r\n\r\n  export default {\r\n      createUser\r\n  }","import { createSlice, PayloadAction, createAction, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { User } from '../types'\r\nimport userService from '../services/users'\r\n\r\nconst initialState: (User) = { // initialize empty user\r\n    username: '',\r\n    token: ''\r\n}\r\n\r\nexport const createAndSetUser = createAsyncThunk(\r\n  'createAndSetUser',\r\n  async (userObject: { username: string, password: string }, thunkAPI) => {\r\n    try {\r\n      const user = await userService.createUser(userObject)\r\n      return user\r\n    } catch(e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User>) => {\r\n        console.log(\"WTF\")\r\n        return action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.username = ''\r\n      state.token = ''\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setUser, logout } = userSlice.actions\r\n\r\nexport default userSlice.reducer","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/login'\r\n\r\nconst login = async (credentials: Record<string, unknown>) => {\r\n    const res = await axios.post(baseUrl, credentials)\r\n    return res.data\r\n  }\r\n  \r\n  export default { login }\r\n  ","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { RootState } from \"../store\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setUser } from \"../states/userState\";\r\n// import { loginUser } from \"../states/userState\";\r\nimport loginService from '../services/login'\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Input,\r\n  Button,\r\n  Center,\r\n  Box\r\n} from \"@chakra-ui/react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LoginForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = async (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault()\r\n    if (!canBeSubmitted()) {\r\n        return;\r\n      }\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      await dispatch(setUser(user))\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch(e) {\r\n      alert(\"Login failed, error: \" + e)\r\n    }\r\n  }\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const canBeSubmitted = () => {\r\n    return (\r\n        (password.length >= 5) && (username.length >= 3)\r\n    );\r\n  }\r\n\r\n  const canSubmit = canBeSubmitted()\r\n\r\n      return (\r\n        <Center>\r\n        <form onSubmit={handleLogin}>\r\n  <FormControl>\r\n    <FormLabel>Username</FormLabel>\r\n    <Input type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)} />\r\n    <FormLabel>Password</FormLabel>\r\n    <Input type=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n    <Button disabled={!canSubmit} type=\"submit\">Login</Button> <Link to=\"register\"><Button>Register</Button></Link>\r\n    \r\n  </FormControl>\r\n  </form>\r\n  </Center>\r\n      )\r\n  }\r\n      \r\n\r\n  export default LoginForm","import { createSlice, PayloadAction, createAction, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { Diary } from '../types'\r\n\r\nconst initialState: Diary[] = [\r\n        {\r\n            title: \"\",\r\n            text: \"\",\r\n            priv: false,\r\n            user: {\r\n                username: \"\",\r\n                id: \"\"\r\n            },\r\n            date: \"\",\r\n            id: \"\"\r\n        }\r\n    ]\r\n\r\nexport const diarySlice = createSlice({\r\n  name: 'diaries',\r\n  initialState,\r\n  reducers: {\r\n    setDiaries: (state, action: PayloadAction<Diary[]>) => {\r\n      return action.payload\r\n    },\r\n    editDiary: (state, action: PayloadAction<Diary>) => {\r\n      for (const i in state) {\r\n        if (state[i].id == action.payload.id) state[i] = action.payload // loop through diaries and replace edited diary with server response\r\n      }\r\n    },\r\n    createDiary: (state, action: PayloadAction<Diary>) => {\r\n      state.push(action.payload)\r\n    },\r\n    deleteDiary: (state, action) => {\r\n      return state.filter(d => d.id !== action.payload)\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setDiaries, editDiary, createDiary, deleteDiary } = diarySlice.actions\r\n\r\nexport default diarySlice.reducer","import React, { useState } from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Text,\r\n    Link\r\n  } from \"@chakra-ui/react\"\r\n\r\n  import { useDisclosure } from '@chakra-ui/hooks'\r\n\r\nexport function DiaryTextModal({ diaryText }: { diaryText: string }) {\r\n  \r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  return (\r\n    <>\r\n         <Link onClick={onOpen}>Read Dream</Link>\r\n\r\n<Modal isOpen={isOpen} onClose={onClose}>\r\n  <ModalOverlay />\r\n  <ModalContent>\r\n    <ModalCloseButton />\r\n    <ModalBody>\r\n      <br />\r\n        <Text>{diaryText}</Text>\r\n    </ModalBody>\r\n\r\n  </ModalContent>\r\n</Modal>\r\n    </>\r\n  )\r\n}","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/diaries'\r\nlet token: string | null = null\r\n\r\nconst setToken = (newToken: string) => {  token = `bearer ${newToken}`} // function exported and used by app component to set authentification token\r\n\r\nconst getPublicDiaries = async () => { // get all public diaries from backend\r\n    const config = {    headers: { Authorization: token },  }\r\n    const response = await axios.get(baseUrl, config )\r\n    return response.data\r\n}\r\n\r\nconst createDiary = async (diary: { title: string, text: string, priv: boolean}) => { // create new diary given object\r\n    const config = {    headers: { Authorization: token },  }\r\n    const response = await axios.post(baseUrl, diary, config )\r\n    return response.data\r\n}\r\n\r\nconst getUsersDiaries = async () => { // get diaries for current user\r\n    const config = {    headers: { Authorization: token },  }\r\n    const response = await axios.get(`${baseUrl}/currentUserDiaries`, config)\r\n    return response.data\r\n\r\n}\r\n\r\nconst changeDiaryPrivacy = async (newPrivacySetting: boolean, id: string) => { // change a diary's privacy setting\r\n    const config = {    headers: { Authorization: token },  }\r\n    const editObject = { priv: newPrivacySetting }\r\n    const response = await axios.put(`${baseUrl}/${id}`, editObject, config)\r\n    return response.data\r\n\r\n}\r\n\r\nconst editDiary = async (id: string, text: string, priv: boolean) => { // change a diary's text field\r\n    const config = {    headers: { Authorization: token },  }\r\n    const editObject = { text, priv }\r\n    const response = await axios.put(`${baseUrl}/${id}`, editObject, config)\r\n    return response.data\r\n}\r\n\r\nconst deleteDiary = async (id: string) => { // delete a diary\r\n    const config = {    headers: { Authorization: token },  }\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n}\r\nexport default {\r\n    createDiary,\r\n    setToken,\r\n    getPublicDiaries,\r\n    getUsersDiaries,\r\n    changeDiaryPrivacy,\r\n    editDiary,\r\n    deleteDiary\r\n}","import React from 'react'\r\nimport { Diary } from '../types'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../store'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setDiaries } from '../states/diaryState'\r\nimport { DiaryTextModal } from './DiaryTextModal'\r\nimport diaryService from '../services/diaries'\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Heading\r\n} from \"@chakra-ui/react\"\r\n// import { addDiary, removeDiary, initializeDiaries } from '../features/counter/diaryState'\r\n\r\nexport function DiaryList() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const initialDiaries = await diaryService.getPublicDiaries()\r\n      dispatch(setDiaries(initialDiaries))\r\n    }\r\n    fetch()\r\n  }, [dispatch])\r\n  \r\n  const diaries = useSelector((state: RootState) => state.diaries).filter(d => d.priv == false) // state holds all diaries for page, so filter out users private diaries for this page\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Heading>Public Dreams</Heading>\r\n      <Table>\r\n      <TableCaption>Public Dream Journal Entries</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Title</Th>\r\n            <Th>Date</Th>\r\n            <Th>Dream</Th>\r\n            <Th>User</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n        {\r\n          Object.values(diaries).map((diary: Diary) => {\r\n            return (\r\n              <Tr key={diary.id}>\r\n                <Td>{diary.title}</Td>\r\n                <Td>{diary.date.substring(0, 9)}</Td>\r\n                <Td color=\"blue\"><DiaryTextModal diaryText={diary.text} /></Td>\r\n                <Td>{diary.user.username}</Td>\r\n              </Tr>\r\n            )\r\n          })\r\n        }\r\n        </Tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Diary } from '../types'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Textarea,\r\n    Select,\r\n    Center\r\n  } from \"@chakra-ui/react\"\r\nimport diaryService from '../services/diaries'\r\nimport { useDisclosure } from '@chakra-ui/hooks'\r\nimport { editDiary } from '../states/diaryState'\r\nexport function EditDiaryModal({ diaryText, diaryId, diaryPriv }: { diaryText: string, diaryId: string, diaryPriv: boolean }) {\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [ text, setText ] = useState(diaryText)\r\n  const [ privacy, setPrivacy ] = useState(diaryPriv.toString())\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const handleEdit = async (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault()\r\n    if (!canBeSubmitted()) {\r\n      return;\r\n    }\r\n    const editObject = {\r\n      id: diaryId,\r\n      text, \r\n      priv: (privacy === 'true')\r\n    }\r\n    try {\r\n      const editedDiary = await diaryService.editDiary(editObject.id, editObject.text, editObject.priv)\r\n      dispatch(editDiary(editedDiary)) \r\n      setText('')\r\n      onClose()\r\n    } \r\n    catch(e) {\r\n      alert(e)\r\n    }\r\n    }\r\n    \r\n    const canBeSubmitted = () => {\r\n      return (\r\n          (text.length >= 10) &&  (text.length <= 500)\r\n      )\r\n    }\r\n    const canSubmit = canBeSubmitted()\r\n\r\n  return (\r\n    <>\r\n         <Button onClick={onOpen}>Edit Dream</Button>\r\n\r\n<Modal isOpen={isOpen} onClose={onClose}>\r\n  <ModalOverlay />\r\n  <ModalContent>\r\n    <ModalHeader>Edit Dream</ModalHeader>\r\n    <ModalCloseButton />\r\n    <ModalBody>\r\n      <form onSubmit={handleEdit}>\r\n    <FormControl>\r\n        <FormLabel>Edit Dream</FormLabel>\r\n        <Textarea value={text} onChange={({ target }) => setText(target.value)}>{text}</Textarea>\r\n        <FormLabel>Change Privacy Setting</FormLabel>\r\n    <Select placeholder=\"Select One\" onChange={({ target }) => setPrivacy(target.value)}>\r\n    <option value=\"true\">Private</option>\r\n    <option value=\"false\">Public</option>\r\n    </Select>\r\n        <br />\r\n        <Center><Button disabled={!canSubmit} colorScheme=\"blue\" mr={3} type=\"submit\">Edit Dream</Button></Center>\r\n    </FormControl>\r\n      </form>\r\n    </ModalBody>\r\n\r\n  </ModalContent>\r\n</Modal>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Diary } from '../types'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../store'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { DiaryTextModal } from './DiaryTextModal'\r\nimport { EditDiaryModal } from './EditDiaryModal'\r\nimport { deleteDiary } from '../states/diaryState'\r\nimport diaryService from '../services/diaries'\r\nimport { setDiaries } from '../states/diaryState'\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Button,\r\n  Heading,\r\n} from \"@chakra-ui/react\"\r\n// import { addDiary, removeDiary, initializeDiaries } from '../features/counter/diaryState'\r\n\r\nexport function UserDiaryList() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      try {\r\n        const usersDiaries = await diaryService.getUsersDiaries()\r\n        dispatch(setDiaries(usersDiaries))\r\n      } catch(e) {\r\n        alert(e)\r\n      }\r\n\r\n    }\r\n    fetch()\r\n  }, [dispatch])\r\n\r\n  const user = useSelector((state: RootState) => state.user)\r\n\r\n  const diaries = useSelector((state: RootState) => state.diaries)\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      dispatch(deleteDiary(id))\r\n    } \r\n    catch(e) {\r\n      alert(e)\r\n    }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Heading>Your Dreams</Heading>\r\n      <Table>\r\n      <TableCaption>Your Dream Journal</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Diary Title</Th>\r\n            <Th>Date</Th>\r\n            <Th>Diary</Th>\r\n            <Th>Private</Th>\r\n            <Th>Delete</Th>\r\n            <Th>Edit Entry</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n        {\r\n          Object.values(diaries).map((diary: Diary) => {\r\n            return (\r\n              <Tr key={diary.id}>\r\n                <Td>{diary.title}</Td>\r\n                <Td>{diary.date.substring(0, 10)}</Td>\r\n                <Td color=\"blue\"><DiaryTextModal diaryText={diary.text} /></Td>\r\n                <Td>{diary.priv.toString()}</Td>\r\n                <Td><Button onClick={() => handleDelete(diary.id)}>Delete Diary</Button></Td>\r\n                <Td><EditDiaryModal diaryText={diary.text} diaryId={diary.id} diaryPriv={diary.priv}/></Td>\r\n              </Tr>\r\n            )\r\n          })\r\n        }\r\n        </Tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Textarea,\r\n    Select,\r\n    Center,\r\n    Link,\r\n  } from \"@chakra-ui/react\"\r\n  import { useDispatch } from 'react-redux'\r\n  import { createDiary } from '../states/diaryState'\r\n  import { useDisclosure } from '@chakra-ui/hooks'\r\n  import diaryService from '../services/diaries'\r\n\r\nexport function CreateDiaryModal() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [ title, setTitle ] = useState('')\r\n  const [ text, setText ] = useState('')\r\n  const [ privacy, setPrivacy ] = useState('')\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  const handleCreate = async (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault()\r\n    if (!canBeSubmitted()) {\r\n      return;\r\n    }\r\n    const diary = {\r\n      text,\r\n      title,\r\n      priv: (privacy === 'true') \r\n    }\r\n    try {\r\n      const newDiary = await diaryService.createDiary(diary)\r\n      dispatch(createDiary(newDiary))\r\n      setText('')\r\n      setTitle('')\r\n      onClose()\r\n    } \r\n    catch(e) {\r\n      alert(e)\r\n    }\r\n    }\r\n\r\n    const canBeSubmitted = () => {\r\n      return (\r\n          (5 <= title.length) && (30 >= title.length) && (text.length >= 10) &&  (text.length <= 500)\r\n      )\r\n    }\r\n    const canSubmit = canBeSubmitted()\r\n  return (\r\n    <>\r\n         <Link onClick={onOpen}>Write About A Dream</Link>\r\n\r\n<Modal isOpen={isOpen} onClose={onClose}>\r\n  <ModalOverlay />\r\n  <ModalContent>\r\n    <ModalHeader>Write about your dream</ModalHeader>\r\n    <ModalCloseButton />\r\n    <ModalBody>\r\n      <form onSubmit={handleCreate}>\r\n      <FormControl>\r\n    <FormLabel>Title (5 to 30 chars)</FormLabel>\r\n    <Input type=\"text\" onChange={({ target }) => setTitle(target.value)} />\r\n    <FormLabel>Dream Description (10 to 500 chars)</FormLabel>\r\n    <Textarea onChange={({ target }) => setText(target.value)} />\r\n    <FormLabel>Privacy Setting</FormLabel>\r\n    <Select placeholder=\"Select option\" onChange={({ target }) => setPrivacy(target.value)} >\r\n    <option value=\"true\">Private</option>\r\n    <option value=\"false\">Public</option>\r\n    </Select>\r\n    <br />\r\n    <Center><Button disabled={!canSubmit} colorScheme=\"blue\" mr={3} type=\"submit\">Create Dream Journal Entry</Button></Center>\r\n  </FormControl>\r\n      </form>\r\n    </ModalBody>\r\n\r\n  </ModalContent>\r\n</Modal>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { RootState } from \"../store\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link as BrowserLink } from 'react-router-dom'\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Input,\r\n  Button,\r\n  Center,\r\n  Link,\r\n  Box,\r\n  Divider\r\n} from \"@chakra-ui/react\"\r\nimport userService from '../services/users'\r\nimport { Redirect } from \"react-router\";\r\nimport { setUser } from \"../states/userState\";\r\n\r\nexport function RegisterForm() {\r\n\r\n  const dispatch = useDispatch()\r\n  // eslint-disable-next-line no-var\r\n  const redirect = false\r\n\r\n  const handleRegister = async (event: React.SyntheticEvent<EventTarget>) => {\r\n    event.preventDefault()\r\n    if (!canBeSubmitted()) {\r\n        return;\r\n      }\r\n    try {\r\n      const user = await userService.createUser({ username, password })\r\n      dispatch(setUser(user))\r\n    } catch(e) {\r\n      alert(e)\r\n    }\r\n\r\n  }\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const canBeSubmitted = () => {\r\n    return (\r\n        (password === confirmPassword) && (password.length >= 5) && (username.length >= 3)\r\n    );\r\n  }\r\n\r\n  const canSubmit = canBeSubmitted()\r\n\r\n      return (\r\n        <Center>\r\n        <form onSubmit={handleRegister}>\r\n  <FormControl paddingTop=\"10\">\r\n    <FormLabel>Username (minimum 3 characters)</FormLabel>\r\n    <Input type=\"text\" value={username} onChange={({ target }) => setUsername(target.value)} />\r\n    <FormLabel paddingTop=\"5\">Password (minimum 5 characters)</FormLabel>\r\n    <Input type=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n    <FormLabel paddingTop=\"5\">Confirm Password (must be the same as password)</FormLabel>\r\n    <Input type=\"password\" value={confirmPassword} onChange={({ target }) => setConfirmPassword(target.value)} />\r\n    <Button disabled={!canSubmit} type=\"submit\">Register</Button> <BrowserLink to=\"/login\"><Button>Back to Login</Button></BrowserLink>\r\n  </FormControl>\r\n  {redirect && <Redirect to=\"/login\" />}\r\n\r\n  </form>\r\n  </Center>\r\n      )\r\n  }\r\n      \r\n\r\n","import React from 'react';\nimport LoginForm from './components/LoginForm';\nimport { DiaryList } from './components/DiaryList';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from './store'\nimport diaryService from './services/diaries'\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom'\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, Center, Heading, Button, Link as ClickableLink } from '@chakra-ui/react'\nimport { UserDiaryList } from './components/UserDiaryList'\nimport { CreateDiaryModal } from './components/CreateDiaryModal'\nimport { RegisterForm } from './components/RegisterForm'\nimport { logout } from './states/userState';\n\nfunction Nav() {\n  const dispatch = useDispatch()\n\n  const logoutUser = () => {\n    dispatch(logout())\n  }\n\n  return (\n<Breadcrumb spacing=\"8px\">  \n<BreadcrumbItem>\n    <BreadcrumbLink as={Link} to=\"/publicdiaries\">\n      Public Dreams\n    </BreadcrumbLink>\n  </BreadcrumbItem>\n  <BreadcrumbItem>\n    <BreadcrumbLink as={Link} to=\"/mydiaries\">\n      My Dreams\n    </BreadcrumbLink>\n  </BreadcrumbItem>\n  <BreadcrumbItem>\n      <CreateDiaryModal />\n  </BreadcrumbItem>\n  <BreadcrumbItem>\n  <ClickableLink onClick={logoutUser}>Logout</ClickableLink>\n  </BreadcrumbItem>\n\n</Breadcrumb>\n  )\n}\nfunction App() {\n  const user = useSelector((state: RootState) => state.user)\n  if (user.token !== '') diaryService.setToken(user.token) // set authentification token for requests to server\n\n  return (\n    <>\n    <Router>\n      <div className=\"App\">\n      {user.username != '' && <Nav />}\n        <Switch>\n          <Route path=\"/publicdiaries\">\n            {user.username == '' && <Redirect to='/login' />}\n            <DiaryList />\n          </Route>\n          <Route path=\"/mydiaries\">\n            {user.username == '' && <Redirect to='/login' />}\n            <UserDiaryList />\n          </Route>\n          <Route path=\"/register\">\n            <Center><Heading>Register</Heading></Center>\n            {user.username != '' && <Redirect to='/' />}\n            <RegisterForm />\n          </Route>\n          <Route path=\"/login\">\n            <Center><Heading>Login Page</Heading></Center>\n            <LoginForm />\n            {user.username != '' && <Redirect to='/' />}\n          </Route>\n          <Route path='/'>\n            {user.username == '' && <Redirect to='/login' />} \n            {user.username != '' && <Redirect to='/publicdiaries' />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </>\n  )\n  \n}\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport diaryReducer from './states/diaryState'\r\nimport userReducer from './states/userState'\r\nexport const store = configureStore({\r\n  reducer: {\r\n    diaries: diaryReducer,\r\n    user: userReducer\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store'\nimport { Provider } from 'react-redux'\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n\n    <Provider store={store}> \n    <ChakraProvider>\n            <App /> \n    </ChakraProvider>   \n\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}